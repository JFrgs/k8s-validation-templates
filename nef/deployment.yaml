apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:12
          args:
            - "-c"
            - "shared_buffers=256MB"
            - "-c"
            - "max_connections=200"
          volumeMounts:
            - name: app-db-data
              mountPath: /var/lib/postgresql/data/pgdata
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_SERVER
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: POSTGRES_SERVER
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: POSTGRES_DB
      volumes:
        - name: app-db-data
          emptyDir: {}
---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: pgadmin
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: pgadmin
#   template:
#     metadata:
#       labels:
#         app: pgadmin
#     spec:
#       containers:
#         - name: pgadmin
#           image: dpage/pgadmin4
#           ports:
#             - containerPort: 5050
#           env:
#             - name: PGADMIN_DEFAULT_EMAIL
#               valueFrom:
#                 configMapKeyRef:
#                   name: nef-configmap
#                   key: PGADMIN_DEFAULT_EMAIL
#             - name: PGADMIN_DEFAULT_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: nef-configmap
#                   key: PGADMIN_DEFAULT_PASSWORD
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-nef
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-nef
  template:
    metadata:
      labels:
        app: mongo-nef
    spec:
      containers:
        - name: mongo-nef
          image: mongo:4.4.10
          volumeMounts:
            - name: app-mongo-db-data
              mountPath: /data/db
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: MONGO_USER
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: MONGO_PASSWORD
      volumes:
        - name: app-mongo-db-data
          emptyDir: {}
---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mongo-express
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mongo-express
#   template:
#     metadata:
#       labels:
#         app: mongo-express
#     spec:
#       containers:
#         - name: mongo-express
#           image: mongo-express:1.0.0-alpha.4
#           ports:
#             - containerPort: 8081
#           env:
#             - name: ME_CONFIG_MONGODB_ADMINUSERNAME
#               valueFrom:
#                 configMapKeyRef:
#                   name: nef-configmap
#                   key: MONGO_USER
#             - name: ME_CONFIG_MONGODB_ADMINPASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: nef-configmap
#                   key: MONGO_PASSWORD
#             - name: ME_CONFIG_MONGODB_URL
#               valueFrom:
#                 configMapKeyRef:
#                   name: nef-configmap
#                   key: ME_CONFIG_MONGODB_URL
#             - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
#               valueFrom: 
#                 configMapKeyRef:
#                     name: nef-configmap
#                     key: MONGO_EXPRESS_ENABLE_ADMIN
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: dimfrag/nef-backend:1.0
          imagePullPolicy: Always
          ports:
             - containerPort: 80
          command: ["/start-reload.sh"]
          env:
            - name: SERVER_NAME
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: SERVER_NAME
            - name: SERVER_HOST
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: SERVER_HOST
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: SERVER_PORT
            - name: SENTRY_DSN
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: SENTRY_DSN
            - name: BACKEND_CORS_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: BACKEND_CORS_ORIGINS
            - name: SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: SECRET_KEY
            - name: FIRST_SUPERUSER
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: FIRST_SUPERUSER
            - name: FIRST_SUPERUSER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: FIRST_SUPERUSER_PASSWORD
            - name: PROJECT_NAME
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: PROJECT_NAME
            - name: NEF_HOST
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: NEF_HOST
            - name: POSTGRES_SERVER
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: POSTGRES_SERVER
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom: 
                configMapKeyRef:
                  name: nef-configmap
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: POSTGRES_DB
            - name: MONGO_CLIENT
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: MONGO_CLIENT
            - name: CAPIF_HOST
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: CAPIF_HOST
            - name: CAPIF_HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: CAPIF_HTTP_PORT
            - name: CAPIF_HTTPS_PORT
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: CAPIF_HTTPS_PORT
            - name: EXTERNAL_NET
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: EXTERNAL_NET
            - name: USE_PUBLIC_KEY_VERIFICATION
              valueFrom:
                configMapKeyRef:
                  name: nef-configmap
                  key: USE_PUBLIC_KEY_VERIFICATION
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: reverse-proxy
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: reverse-proxy
#   template:
#     metadata:
#       labels:
#         app: reverse-proxy
#     spec:
#       containers:
#         - name: reverse-proxy
#           image: dimfrag/nef-nginx:1.0
#           command:
#             - "/bin/sh"
#             - "-c"
#             - "/self-signed-crt.sh && /dynamic_ports.sh"
#           ports:
#             - containerPort: 80
#             - containerPort: 443
#           volumeMounts:
#             - name: nginxdata
#               mountPath: /var/log/nginx
#           env:
#             - name: APP_ENV
#               value: prod
#             - name: APP_NAME
#               value: webserver
#             - name: APP_DEBUG
#               value: "false"
#             - name: SERVICE_NAME
#               value: webserver
#             - name: NGINX_HTTP
#               valueFrom:
#                 configMapKeyRef:
#                   name: nef-configmap
#                   key: NGINX_HTTP
#             - name: NGINX_HTTPS
#               valueFrom:
#                 configMapKeyRef:
#                   name: nef-configmap
#                   key: NGINX_HTTPS
#       volumes:
#         - name: nginxdata
#           emptyDir: {}
